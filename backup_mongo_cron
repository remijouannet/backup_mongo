#!/bin/bash

rotate() {
	local log_file=$1
	local maxbytes=$2
	local rotate=$3

	if [ -f $log_file"."$rotate".gz" ]
	then
		rm $log_file"."$rotate".gz"
	fi

	currentbytes=$(du -sb $LOG_FILE | cut -f1)

	if [ $currentbytes -ge $maxbytes ]
	then		
		local i=$rotate	
		while [ "$i" -ne 0 ]
		do
			if [ -f $log_file"."$i".gz" ]
			then
				mv $log_file"."$i".gz" $log_file"."$(($i+1))".gz"
    			fi
			let i=$i-1
  		done
	
		gzip -c $log_file > $log_file"."1.gz
		cat /dev/null > $log_file
	fi
}


if [ "$#" -eq 1 ] && [ -f "$1" ]
then
	CONF_FILE=$1
	. $1
elif [ -f ./backup_mongo.ini ]	
then	
	CONF_FILE=./backup_mongo.ini
	. ./backup_mongo.ini
elif [ -f /etc/backup_mongo/backup_mongo.ini ]
then
	CONF_FILE=/etc/backup_mongo/backup_mongo.ini
        . /etc/backup_mongo/backup_mongo.ini
else
	logger "backup_mongo could not find /etc/backup_mongo/backup_mongo.ini \
			or backup_mongo.ini or $1"
	exit 1
fi


logger "backup_mongo create $(dirname $LOG_FILE)"
if [ ! -d $(dirname $LOG_FILE) ] 
then
	mkdir -p $(dirname $LOG_FILE) || logger "can't create to $(dirname $LOG_FILE)"
fi

if [ ! -w $(dirname $LOG_FILE) ]
then
	logger "can't write to $(dirname $LOG_FILE)"
	exit 1
fi

if [ -f ./backup_mongo ]	
then
	EXEC="./backup_mongo"
elif [ -f /usr/sbin/backup_mongo ]
then
        EXEC="/usr/sbin/backup_mongo"
else
	logger "backup_mongo could not find /usr/sbin/backup_mongo or backup_mongo"
	exit 1
fi


logger "backup_mongo launch $EXEC $CONF_FILE"
$EXEC $CONF_FILE >> $LOG_FILE  2>&1;
if [ $? -ne 0 ]
then
	echo "log" | mail -s "[$HOSTNAME] backup_mongo failed" -a $LOG_FILE $FROM_MAIL $MAIL
fi

rotate $LOG_FILE $LOG_FILE_MAXBYTES $LOG_FILE_ROTATE

exit 0
